#!/usr/bin/ruby

DEVELOPMENT_DIR = File.expand_path('~/development')
RUBY_VERSION = '2.5.3'
SHELL_RESOURCES = %w(.zshrc .vimrc)

puts "Beginning setup..."
`./package-manager install`

# Install interactive shell
if File.exists?('/bin/zsh')
  puts 'zsh already installed'
else
  puts 'installing zsh'
  `sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"`
end

# Configure local development environment
if File.exists?(DEVELOPMENT_DIR)
  puts "#{DEVELOPMENT_DIR} already exists"
else
  puts "creating #{DEVELOPMENT_DIR}"
  `mkdir #{DEVELOPMENT_DIR}`
end

dotfiles_dir = File.join(DEVELOPMENT_DIR, 'dotfiles')
if File.exists?(dotfiles_dir)
  puts "#{dotfiles_dir} already exists"
else
  puts "cloning dotfiles repository"
  `git clone https://github.com/roverslim/dotfiles.git #{dotfiles_dir}`
end

require 'date'
home_dir = File.expand_path('~/')
SHELL_RESOURCES.each do |shell_resource|
  shell_resource_dest = File.join(home_dir, shell_resource)
  if File.exists?(shell_resource_dest) && File.realpath(shell_resource_dest).include?(dotfiles_dir)
    puts "#{shell_resource} already links to dotfiles"
    next
  end

  if File.exists?(shell_resource_dest)
    renamed_shell_resource = "#{shell_resource_dest}.#{DateTime.now.strftime('%F.%H.%M.%S.%L')}"
    puts "A #{shell_resource_dest} already exists. Renaming it to #{renamed_shell_resource}"
    `mv #{shell_resource_dest} #{renamed_shell_resource}`
  end

  shell_resource_target = File.join(dotfiles_dir, shell_resource)
  puts "symlinking #{shell_resource_target} to #{home_dir}"
  `ln -sfv #{shell_resource_target} #{home_dir}`
end

# Clone vim plugins
plugin_dir = File.join(DEVELOPMENT_DIR, 'vim-pathogen')
if File.exists?(plugin_dir)
  puts "#{plugin_dir} already exists"
else
  puts "cloning vim-pathogen"
  `git clone https://github.com/tpope/vim-pathogen #{plugin_dir}`

  vim_dotfile_dir = File.join(home_dir, '.vim')
  if File.exists?(vim_dotfile_dir)
    puts "#{vim_dotfile_dir} already exists"
  else
    puts "creating #{vim_dotfile_dir}"
    `mkdir #{vim_dotfile_dir}`
  end

  puts "symlinking vim-pathogen"
  plugin_source = File.join(plugin_dir, 'autoload')
  `ln -sfv #{plugin_source} #{vim_dotfile_dir}`
end

plugin_dir = File.join(DEVELOPMENT_DIR, 'new-railscasts-theme')
if File.exists?(plugin_dir)
  puts "#{plugin_dir} already exists"
else
  puts "cloning new-railscasts-theme"
  `git clone https://github.com/carakan/new-railscasts-theme #{plugin_dir}`

  vim_dotfile_dir = File.join(home_dir, '.vim')
  if File.exists?(vim_dotfile_dir)
    puts "#{vim_dotfile_dir} already exists"
  else
    puts "creating #{vim_dotfile_dir}"
    `mkdir #{vim_dotfile_dir}`
  end

  puts "symlinking new-railscasts-theme"
  plugin_source = File.join(plugin_dir, 'colors')
  `ln -sfv #{plugin_source} #{vim_dotfile_dir}`

  `sed -i '' 's/colorscheme .*/colorscheme new-railscasts/g' .vimrc`
end

installed_ruby_versions = `ls ~/.rubies`
if installed_ruby_versions.include?(RUBY_VERSION)
  puts "ruby #{RUBY_VERSION} already installed"
else
  puts "installing #{RUBY_VERSION}"
  `ruby-install ruby #{RUBY_VERSION}`
end
